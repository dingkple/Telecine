// Manifest version information!
def versionMajor = 1
def versionMinor = 3
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

buildscript {
  dependencies {
    classpath 'com.android.tools.build:gradle:1.2.3'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
  }
}

def getBugsnagKey() {
  return hasProperty('TELECINE_BUGSNAG_KEY') ? TELECINE_BUGSNAG_KEY : ''
}
def getAnalyticsKey() {
  return hasProperty('TELECINE_ANALYTICS_KEY') ? TELECINE_ANALYTICS_KEY : ''
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
  compileSdkVersion 22
  buildToolsVersion '22.0.1'

  defaultConfig {
    applicationId 'com.jakewharton.telecine'

    minSdkVersion 21
    targetSdkVersion 22

    versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    buildConfigField "String", "BUGSNAG_KEY", "\"${getBugsnagKey()}\""
    buildConfigField "String", "ANALYTICS_KEY", "\"${getAnalyticsKey()}\""
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
    warning 'MissingTranslation'
  }

  dexOptions {
    preDexLibraries = Boolean.valueOf(System.getProperty("pre-dex", "true"))
  }

  signingConfigs {
    debug {
      storeFile rootProject.file('debug.keystore')
      storePassword 'android'
      keyAlias 'android'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      signingConfig signingConfigs.debug
    }
  }
}

dependencies {
  compile 'com.android.support:support-annotations:22.2.1'
  compile 'com.google.android.gms:play-services-analytics:7.5.0'
  compile 'com.jakewharton:butterknife:7.0.1'
  compile 'com.jakewharton.timber:timber:3.1.0'
  compile 'com.bugsnag:bugsnag-android:3.2.5'
  compile 'com.squareup.dagger:dagger:1.2.2'
  apt 'com.squareup.dagger:dagger-compiler:1.2.2'
  testCompile 'junit:junit:4.12'
  testCompile 'com.google.truth:truth:0.27'
  compile project(':libstreaming')
}
